%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%        Space Game data processing script            %%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%This script was written by Alaina Pearce in December 2021 for 
%the purpose of processing the Space Game task used in the RO1 grant
%as part of Pearce's F32 grant. This script converts the 
%task-space_groupdata.tsv file generated by the SpaceGame_WF.py python
%script because there was no good way to get this complex of a structure 
%array in python easily. Need a .mat structure array to run the matlab 
%decision making model script from the Kool paper.



%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%                         Setup                       %%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%!need to edit this section (and all paths) if move script or any directories it calls!

%get working directory path for where this script is saved
%'.../OneDrive - The Pennsylvania State University/b-childfoodlab_Shared/Active_Studies/RO1_Brain_Mechanisms_IRB_5357/Participant_Data/BIDSdat/code')
script_wd = mfilename('fullpath');

if ismac()
    slash = '/';
else
    slash = '\';
end

%get location/character number for '/" in file path
slashloc_wd=find(script_wd==slash);

%use all characters in path name upto the 7th slash (individual path info
%'.../OneDrive - The Pennsylvania State University/b-childfoodlab_Shared/Active_Studies/RO1_Brain_Mechanisms_IRB_5357/Participant_Data/BIDSdat')
base_wd = script_wd(1:slashloc_wd(end-1));

%this will tell matlab to look at all files withing the base_wd--so any
%subfolder will be added to search path
addpath(genpath(base_wd));

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%         Load Databases and Clean up old ones        %%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
cd([base_wd 'derivatives' slash 'preprocessed' slash 'beh']);

%use str to identify files--save as table
WF_dat = readtable('task-space_groupdata.tsv', 'ReadVariableNames', true, 'Delimiter','\t', 'FileType','text');
WF_dat_VN = WF_dat.Properties.VariableNames;

%loop through sessions and ids
for s = 1:2
    
    %subset by session
    WF_dat_ses = WF_dat(WF_dat.ses == s, :);
    
    % get parIDs
    subIDs = unique(WF_dat_ses.sub);
    nIDs = length(subIDs);
    
    for id = 1:nIDs
        
        % get participant data
        WF_dat_ses_par = WF_dat(WF_dat_ses.sub == subIDs(id), :);
        
        % Sets up groupdata structure array with the same fields as in
        % Kool 2016 data. Written Spring 2020 by Alaina Pearce
        sub_num = subIDs(id);
        session_num = s;
        
        groupdata.session(session_num).i(id, 1) = sub_num;
        
        %not in Kool, but I added
        groupdata.session(session_num).subdata(id).sub = sub_num;
        
        %copy Kool et al data structure for subdat
        groupdata.session(session_num).subdata(id).state_earth = WF_dat_ses_par.state_earth;
        groupdata.session(session_num).subdata(id).stim_left = WF_dat_ses_par.stim_left;
        groupdata.session(session_num).subdata(id).stim_right = WF_dat_ses_par.stim_right;
        groupdata.session(session_num).subdata(id).rt_earth = WF_dat_ses_par.rt_earth;
        groupdata.session(session_num).subdata(id).choice_earth = WF_dat_ses_par.choice_earth;
        groupdata.session(session_num).subdata(id).rt_planet = WF_dat_ses_par.rt_planet;
        groupdata.session(session_num).subdata(id).state_planet = WF_dat_ses_par.state_planet;
        groupdata.session(session_num).subdata(id).points = WF_dat_ses_par.points;
        groupdata.session(session_num).subdata(id).win = WF_dat_ses_par.win;
        groupdata.session(session_num).subdata(id).score = WF_dat_ses_par.score;
        groupdata.session(session_num).subdata(id).practice ='N';
        groupdata.session(session_num).subdata(id).rewards1 = WF_dat_ses_par.rewards1;
        groupdata.session(session_num).subdata(id).rewards2 = WF_dat_ses_par.rewards2;
        groupdata.session(session_num).subdata(id).trial = WF_dat_ses_par.trial;
        groupdata.session(session_num).subdata(id).ntrials = height(WF_dat_ses_par);
        
        %others/Behavioral
        WF_dat_ses_par.missed = WF_dat_ses_par.missed_earth == 1 | WF_dat_ses_par.missed_planet == 1;
        
        groupdata.session(session_num).subdata(id).missed = WF_dat_ses_par.missed_earth == 1 | WF_dat_ses_par.missed_planet == 1;
        groupdata.session(session_num).subdata(id).prev_missed = [1; WF_dat_ses_par.missed(1:end-1)];
        groupdata.session(session_num).subdata(id).prev_state_earth = WF_dat_ses_par.prev_state_earth;
        groupdata.session(session_num).subdata(id).prev_state_planet = WF_dat_ses_par.prev_state_planet;
        groupdata.session(session_num).subdata(id).earth_same = WF_dat_ses_par.same_earth;
        groupdata.session(session_num).subdata(id).planet_same = WF_dat_ses_par.same_planet;
        
        %r matrix
        WF_dat_ses_par.prev_points = [0; WF_dat_ses_par.points(1:end-1)];
        
        stimuli = [WF_dat_ses_par.stim_left, WF_dat_ses_par.stim_right];
        rewards = [WF_dat_ses_par.rewards1, WF_dat_ses_par.rewards2];
        
        ind_unchosen = WF_dat_ses_par.choice_earth ~= stimuli;
        WF_dat_ses_par.diffreward_chosen_unchosen = (rewards(:, 1).*~ind_unchosen(:, 1) + rewards(:, 2).*~ind_unchosen(:, 2)) ...
            - (rewards(:, 1).*ind_unchosen(:, 1) + rewards(:, 2).*ind_unchosen(:, 2));
        
        
        groupdata.session(session_num).subdata(id).r = [WF_dat_ses_par.prev_points, ...
            WF_dat_ses_par.same_earth, WF_dat_ses_par.diffreward_chosen_unchosen, ...
            WF_dat_ses_par.same_planet];
    end
end

%export
save('task-space_groupdata.mat', '-struct', 'groupdata');
