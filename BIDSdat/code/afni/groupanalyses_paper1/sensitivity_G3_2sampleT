#!/bin/tcsh
#
#useage: sensitivity_G3_2sampleT   $1           $2        $3
#                    template    execute?  entire censor string 
#         
# The purpose of this script is to create and run 2 sample paired t-tests of all conditions of interest
# $1: ped or MNI
# $2 run or no
# $3 e.g., fd-0.9_by-block-7_3blocks, fd-0.9_b20_3runs

###################### set up initial variables  ###########################   
#don't log AFNI programs in ~/.afni.log
setenv AFNI_DONT_LOGFILE YES

#dont try version checks
setenv ANFI_VRSION_CHECK NO

##don't auto-compress output files
setenv AFNI_COMPRESSOR NONE

###################### setup and check directories  ###########################   
cd ../../../
set bidsdir = "$cwd"

#set level1 dir
set lev1_dir = $bidsdir/derivatives/analyses/foodcue-paper1/level1

#set test directory
set test_dir = $bidsdir/derivatives/analyses/foodcue-paper1/level2/2sampleT_sensitivity

# set level 2 dir
set lev2_dir = $bidsdir/derivatives/analyses/foodcue-paper1/level2

#set output name
set today = `date +%m-%d-%y`

# set censor string
set lev1_str = $3

# set path to templates
set tpath = $bidsdir/derivatives/templates/

#Get template specific variables
 if ( "$1" == "MNI" ) then
	##Get MNI template used in fmriprep
	set basedset = $tpath/tpl-MNI152NLin2009cAsym/tpl-MNI152NLin2009cAsym_res-01_T1w.nii.gz
	set basedset_name = "tpl-MNI152NLin2009cAsym_res-01_T1w.nii.gz"
	# set string
	set temp = "MNI152NLin2009cAsym"
	set tempst = "MNI"
else
	#Get pediatric template used in fmriprep
        set basedset = $tpath/tpl-MNIPediatricAsym/cohort-3/tpl-MNIPediatricAsym_cohort-3_res-1_T1w.nii.gz
	set basedset_name = "tpl-MNIPediatricAsym_cohort-3_res-1_T1w.nii.gz"
        # set strings
        set temp = "MNIPediatricAsym_cohort-3"
	set tempst = "ped"
endif

# set lev1 results directory name
set lev1split = ($lev1_str:as/_/ /)
set lev1_results = ${tempst}_$lev1split[1]_$lev1split[2]_$lev1split[4]

# get censor str for index file
set censor_str = $lev1split[1]_$lev1split[2]_$lev1split[3]

#set map folder
set map_folder = $test_dir/${tempst}_${lev1_str}_${today}

#create map folder
if ( ! -d $map_folder ) then
    mkdir -p $map_folder
else
	echo "$map_folder already exists. delete or rename to re-run"
	exit
endif

# copy index list and covariate file into output folder for reference
cp $lev2_dir/index_sensitivity_all_${censor_str}.txt $map_folder
cp $lev2_dir/ttest-covariates.txt $map_folder

###################### generate mask for analyses  ########################
# set whole group index list -- lists subjects to include in mask
set WG_index = `cat $lev2_dir/index_sensitivity_all_${censor_str}.txt`

# make temporary directory with participant masks for subjects included in analyses
mkdir $map_folder/temp_mask
foreach sub ( $WG_index )
	cp ${bidsdir}/derivatives/preprocessed/fmriprep/sub-${sub}/ses-1/func/foodcue_full_mask-${temp}*.nii $map_folder/temp_mask/mask_sub-${sub}.nii
end

# generate mask with 80% of participants overlapping
3dmask_tool -input $map_folder/temp_mask/mask* \
	-prefix $map_folder/WG_mask0.8+tlrc              \
        -frac 0.8

# remove temporary directory
rm -r $map_folder/temp_mask

###################### generate scripts  ########################
# gen_group_command.py settings:
	# add -Clustsim option to run 3dClustSim

set models = ( Large-Small_allED_GLT High-Low_allPS_GLT Food-Office_GLT)

foreach m ( $models )
	set output_name = "$m"

    set fileG = "HR_v_LR"
    set HRindex = `cat $lev2_dir/index_sensitivity_highrisk_${censor_str}.txt`
    set LRindex = `cat $lev2_dir/index_sensitivity_lowrisk_${censor_str}.txt`
    
        # generate ttest script -- use ff_medimp as covariate (contains median imputed value for ID 54)
        gen_group_command.py -command 3dttest++                                     \
            -write_script $map_folder/${fileG}_2sampleT++_${output_name}            \
            -prefix  ${fileG}_2sampleT++_${output_name}                             \
            -dsets $lev1_dir/*/$lev1_results/stats.sub-???+tlrc.HEAD              \
            -dset_sid_list $HRindex                                                 \
            -dsets $lev1_dir/*/$lev1_results/stats.sub-???+tlrc.HEAD              \
            -dset_sid_list $LRindex			                           \
            -set_labels highrisk lowrisk		                        \
            -subs_betas "${m}"'#'0_Coef			                          \
            -options -Clustsim				                             \
                -mask $map_folder/WG_mask0.8+tlrc.HEAD -covariates $lev2_dir/ttest-covariates.txt"'[0..3,6,9]'"

        if ( "$2" == "run" ) then
       		cd $map_folder
        	tcsh ${fileG}_2sampleT++_${output_name}
        endif
end

# Copy base template into results folder 
if ( ! -f $basedset ) then
    echo "***** Failed to find $basedset :("
    exit 1
else
    if ( ! -f $map_folder/$basedset_name ) then
        cp ${basedset} $map_folder
    endif
endif



