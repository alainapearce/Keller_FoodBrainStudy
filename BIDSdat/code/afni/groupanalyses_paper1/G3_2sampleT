#!/bin/tcsh
#
#useage: G3_2sampleT   $1         $2       $3        $4
#                    template    session  execute?  entire censor string 
#         
# The purpose of this script is to create and run 2 sample paired t-tests of all conditions of interest
# $1: ped or MNI
# $2: 1 or 2
# $3 run or no
# $4 e.g., fd-0.9_by-block-7_3blocks, fd-0.9_b20_3runs

###################### set up initial variables  ###########################   
#don't log AFNI programs in ~/.afni.log
setenv AFNI_DONT_LOGFILE YES

#dont try version checks
setenv ANFI_VRSION_CHECK NO

##don't auto-compress output files
setenv AFNI_COMPRESSOR NONE

###################### setup and check directories  ###########################   
cd ../../../
set bidsdir = "$cwd"

#set level1 dir
set lev1_dir =  $bidsdir/derivatives/analyses/FoodCue-fmri/Level1GLM

#set group level dir
set test_dir = $bidsdir/derivatives/analyses/FoodCue-fmri/Level2GLM/Activation_Univariate/ses-${2}/2sampleT

# set index dir
set index_dir = $bidsdir/derivatives/analyses/FoodCue-fmri/Level2GLM/Activation_Univariate/ses-${2}

#set output name
set today = `date +%m-%d-%y`

# set censor string
set censor_str = $4

# set path to templates
set tpath = $bidsdir/derivatives/analyses/FoodCue-fmri/templates

#Get template specific variables
 if ( "$1" == "MNI" ) then
	##Get MNI template used in fmriprep
	set basedset = $tpath/tpl-MNI152NLin2009cAsym/tpl-MNI152NLin2009cAsym_res-01_T1w.nii.gz
	set basedset_name = "tpl-MNI152NLin2009cAsym_res-01_T1w.nii.gz"
	# set string
	set temp = "MNI152NLin2009cAsym"
	set tempst = "MNI"
else
	#Get pediatric template used in fmriprep
        set basedset = $tpath/tpl-MNIPediatricAsym/cohort-3/tpl-MNIPediatricAsym_cohort-3_res-1_T1w.nii.gz
	set basedset_name = "tpl-MNIPediatricAsym_cohort-3_res-1_T1w.nii.gz"
        # set strings
        set temp = "MNIPediatricAsym_cohort-3"
	set tempst = "ped"
endif

# set same of level1 results folder
set results_folder = ${tempst}_${censor_str}

#check to see if have 'Old' directory, 
#if do, check for and clean up old directories,
#if not, create all folders in that path    
if ( -d $test_dir/Old ) then
    set old_folders = `( ls -d $test_dir/* )`

    #if file path $test_dir/$old in loop not same direct file link to $test_dir/Old
    foreach old ( $old_folders )

        #get just dirname
        set dname = `basename $old`

        #if not the 'Old' directory
        if ( "$dname" != "Old" ) then

            #if $test_dir/$old hasn't been moved to $test_dir/Old
            if ( ! -d $test_dir/Old/$dname ) then
                mv $old $test_dir/Old/

            #else update/copy and remove
            else
                cp -u $old $test_dir/Old/
                rm -r $old
            endif
        endif
    end
else
    mkdir -p $test_dir/Old
endif

#set map folder
set map_folder = $test_dir/${tempst}_${censor_str}_${today}

if ( ! -d $map_folder ) then
    mkdir -p $map_folder
endif

# set lev1 results directory name
set lev1censor = ($censor_str:as/_/ /)
set lev1_results = ${tempst}_$lev1censor[1]_$lev1censor[2]

## Use this if masks are in fmriprep dir
#make mask with 80% of participants overlapping
if ( ! -f $map_folder/Session${2}_mask0.8_${today}+tlrc ) then
    3dmask_tool -input ${bidsdir}/derivatives/preprocessed/fmriprep/*/ses-1/func/foodcue_full_mask-${temp}*.nii \
	    -prefix $map_folder/Session${2}_mask0.8_${today}+tlrc              \
	    -frac 0.8
endif


###################### generate scripts  ########################

############# High Risk v Low Risk  ##############

#### 3dTtest ####

#set models = ( HighLarge HighSmall LowLarge LowSmall HighLarge-Small_GLT LowLarge-Small_GLT LargeHigh-Low_GLT SmallHigh-Low_GLT Large-Small_allED_GLT High-Low_allPS_GLT )
#set models = ( HighLarge HighSmall LowLarge LowSmall Large-Small_allED_GLT High-Low_allPS_GLT )

set models = ( Large-Small_allED_GLT High-Low_allPS_GLT )

foreach m ( $models )
	set output_name = "$m"

    set fileG = "HR_v_LR_${censor_str}"
    set HRindex = `cat $index_dir/index_highrisk_${censor_str}.txt`
    set LRindex = `cat $index_dir/index_lowrisk_${censor_str}.txt`
    
    #toz-when using zskip need to convert t to z because voxel
        #may have different number of samples
        gen_group_command.py -command 3dttest++                                     \
            -write_script $map_folder/${fileG}_2sampleT++_${output_name}            \
            -prefix  ${fileG}_2sampleT++_${output_name}                             \
            -dsets $lev1_dir/*/$lev1_results/stats.sub-???+tlrc.HEAD              \
            -dset_sid_list $HRindex                                                 \
            -dsets $lev1_dir/*/$lev1_results/stats.sub-???+tlrc.HEAD              \
            -dset_sid_list $LRindex						                            \
            -set_labels highrisk lowrisk					                        \
            -subs_betas "${m}"'#'0_Coef					                            \
            -options								                                \
                -mask $map_folder/Session${2}_mask0.8_${today}+tlrc.HEAD -toz

        chmod 775 $map_folder/${fileG}_2sampleT++_${output_name}

        if ( "$3" == "run" ) then
       		cd $map_folder
        	tcsh ${fileG}_2sampleT++_${output_name}
        endif
end

#### 3dMEMA ####

# note: REML output does not contain 'GLT' for contrasts
set models = ( Large-Small_allED High-Low_allPS )

foreach m ( $models )
        set output_name = "$m"

        set fileG = "HR_v_LR_${censor_str}"
        set HRindex = `cat $index_dir/index_highrisk_${censor_str}.txt`
        set LRindex = `cat $index_dir/index_lowrisk_${censor_str}.txt`

        #toz-when using zskip need to convert t to z because voxel
        #may have different number of samples
#switch order of set_labels to be consistent with 3dttest. 3dMEMA does group B - group A	
        gen_group_command.py -command 3dMEMA                                        \
                -write_script $map_folder/${fileG}_3dMEMA_${output_name}            \
                -prefix  ${fileG}_3dMEMA_${output_name}                             \
                -dsets $lev1_dir/*/$lev1_results/stats.sub-???_REML+tlrc.HEAD     \
                -dset_sid_list $LRindex                                             \
                -dsets $lev1_dir/*/$lev1_results/stats.sub-???_REML+tlrc.HEAD     \
                -dset_sid_list $HRindex                                             \
                -set_labels lowrisk highrisk                                        \
                -subs_betas "${m}"'#'0_Coef                                         \
                -subs_tstats "${m}"'#'0_Tstat                                       \
                -options                                                            \
                        -mask $map_folder/Session${2}_mask0.8_${today}+tlrc.HEAD -toz

            chmod 775 $map_folder/${fileG}_3dMEMA_${output_name}

        if ( "$3" == "run" ) then
                cd $map_folder
                tcsh ${fileG}_3dMEMA_${output_name}
        endif
end



# Copy base template into results folder 
if ( ! -f $basedset ) then
    echo "***** Failed to find $basedset :("
    exit 1
else
    if ( ! -f $map_folder/$basedset_name ) then
        cp ${basedset} $map_folder
    endif
endif



