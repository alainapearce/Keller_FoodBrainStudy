#!/bin/tcsh
#
#useage: G2_2sample-pairedT   $1         $2       		$3
#		     				template	execute?  	level 1 folder string 
#
# The purpose of this script is to create and run 1sample t-tests of all conditions of interest
# $1: ped or MNI
# $2 run or no
# $3 e.g., fd-0.9_by-block-7_3blocks_noGSR, fd-0.9_b20_3runs_noGSR
###################### set up initial variables  ###########################   
#don't log AFNI programs in ~/.afni.log
setenv AFNI_DONT_LOGFILE YES

#dont try version checks
setenv ANFI_VRSION_CHECK NO

##don't auto-compress output files
setenv AFNI_COMPRESSOR NONE

###################### setup and check directories  ###########################   
#go to and set BIDS main directory
cd ../../../
set bidsdir = "$cwd"

#set level1 dir
set lev1_dir =  $bidsdir/derivatives/analyses/foodcue-paper2/level1

#set test directory
set test_dir = $bidsdir/derivatives/analyses/foodcue-paper2/level2/1sampleT_feis_appetitive

# set R dir
set R_dir = $bidsdir/derivatives/analyses/foodcue-paper2/R

# set R dir
set mask_dir = $bidsdir/derivatives/analyses/foodcue-paper2/masks

#set output name
set today = `date +%m-%d-%y`

# set level1 string
set lev1_str = $3

# set path to templates
set tpath = $bidsdir/derivatives/templates

##Get template specific results folder
if ( "$1" == "MNI" ) then
	##Get MNI template impelemented in 1_sswarp_strct
	set basedset = $tpath/tpl-MNI152NLin2009cAsym/tpl-MNI152NLin2009cAsym_res-01_T1w.nii.gz
	set basedset_name = "tpl-MNI152NLin2009cAsym_res-01_T1w.nii.gz"
	# set string
    	set temp = "MNI152NLin2009cAsym"
	set tempst = "MNI"
else
	##Get pediatric template used in fmriprep
	set basedset = $tpath/tpl-MNIPediatricAsym/cohort-3/tpl-MNIPediatricAsym_cohort-3_res-1_T1w.nii.gz
	set basedset_name = "tpl-MNIPediatricAsym_cohort-3_res-1_T1w.nii.gz"
	# set strings
	set temp = "MNIPediatricAsym_cohort-3"
	set tempst = "ped"
endif


# set lev1 results directory name
set lev1split = ($lev1_str:as/_/ /)
set lev1_results = ${tempst}_$lev1split[1]_$lev1split[2]_$lev1split[4]

# get censor str for index file
set censor_str = $lev1split[1]_$lev1split[2]_$lev1split[3]

#set map folder
set map_folder = $test_dir/${tempst}_${lev1_str}_${today}

#create map folder
if ( ! -d $map_folder ) then
    mkdir -p $map_folder
else
#	echo "$map_folder already exists. delete or rename to re-run"
#	exit
endif


# copy index list and covariate file into output folder for reference
cp $R_dir/index_lin_app.txt $map_folder
cp $R_dir/index_quad_app.txt $map_folder
cp $R_dir/fmri_covariates.csv $map_folder

# set index lists -- lists subjects to include in analyses
#set index_lin = `cat $map_folder/index_lin_app.txt`
#set index_quad = `cat $map_folder/index_quad_app.txt`

set index_lin = $map_folder/index_lin_app.txt
set index_quad = $map_folder/index_quad_app.txt


###################### generate appetitive masks by index list  ########################

foreach analysis ("lin" "quad")

	# set index list
	if ( $analysis == 'lin' ) then
		set index = `cat $index_lin`
	endif

	if ( $analysis == 'quad' ) then
		set index = `cat $index_quad`
	endif

	# generate mask if it doesnt exist
	if ( ! -f $map_folder/${analysis}_appetitive_mask0.8+tlrc) then
		
		# make temporary directory with participant masks for subjects included in analyses
		mkdir $map_folder/temp_mask
		foreach sub ( $index )
			cp ${bidsdir}/derivatives/preprocessed/fmriprep/sub-${sub}/ses-1/func/foodcue_full_mask-${temp}*.nii $map_folder/temp_mask/mask_sub-${sub}.nii
		end

		# generate mask with 80% of participants overlapping
		3dmask_tool -input $map_folder/temp_mask/mask* \
						-prefix $map_folder/temp_mask/${analysis}_mask0.8+tlrc              \
						-frac 0.8

		# make intersection mask with 80% mask and appetitive mask
      	3dmask_tool -input $map_folder/temp_mask/${analysis}_mask0.8+tlrc $mask_dir/app_mask_resamp+tlrc 	\
					-prefix $map_folder/${analysis}_appetitive_mask0.8+tlrc \
                  	-frac 1.0

		# remove temporary directory
		rm -r $map_folder/temp_mask
	endif

end

exit
###################### generate t-test scripts  ########################

# Note: all models include following covariates: sex, avg-motion, pre-mri fullness, pre-mri cams

set map = ( Large-Small_allED_GLT )

# add -Clustsim option to run 3dClustSim

# linear grams model
gen_group_command.py -command 3dttest++                                             \
	-write_script $map_folder/lin_1sampleT++_${map}_grams        \
	-prefix  lin_1sampleT++_${map}_grams           \
	-dsets ${lev1_dir}/*/${lev1_results}/stats.sub-???+tlrc.HEAD       \
	-dset_sid_list $index_lin 					\
	-set_labels $map                                                 \
	-subs_betas "${map}"'#'0_Coef                                    \
	-options                                                       \
		-mask $map_folder/appetitive_mask0.8+tlrc.HEAD  -toz	\
		-covariates $map_folder/fmri_covariates.csv"'[0..5,16..18]'"

# linear kcal model
gen_group_command.py -command 3dttest++                                             \
	-write_script $map_folder/lin_1sampleT++_${map}_kcal        \
	-prefix  lin_1sampleT++_${map}_kcal                    \
	-dsets ${lev1_dir}/*/${lev1_results}/stats.sub-???+tlrc.HEAD       \
	-dset_sid_list $index_lin 					\
	-set_labels $map                                                 \
	-subs_betas "${map}"'#'0_Coef                                    \
	-options                                                       \
		-mask $map_folder/appetitive_mask0.8+tlrc.HEAD  -toz	\
		-covariates $map_folder/fmri_covariates.csv"'[0..5,14,15]'"

# quad grams model
gen_group_command.py -command 3dttest++                                             \
	-write_script $map_folder/quad_1sampleT++_${map}_grams        \
	-prefix  quad_1sampleT++_${map}_grams           \
	-dsets ${lev1_dir}/*/${lev1_results}/stats.sub-???+tlrc.HEAD       \
	-dset_sid_list $index_quad 					\
	-set_labels $map                                                 \
	-subs_betas "${map}"'#'0_Coef                                    \
	-options                                                       \
		-mask $map_folder/appetitive_mask0.8+tlrc.HEAD  -toz	\
		-covariates $map_folder/fmri_covariates.csv"'[0..5,16..18]'"

# quad kcal model
gen_group_command.py -command 3dttest++                                             \
	-write_script $map_folder/quad_1sampleT++_${map}_grams        \
	-prefix  quad_1sampleT++_${map}_grams           \
	-dsets ${lev1_dir}/*/${lev1_results}/stats.sub-???+tlrc.HEAD       \
	-dset_sid_list $index_quad 					\
	-set_labels $map                                                 \
	-subs_betas "${map}"'#'0_Coef                                    \
	-options                                                       \
		-mask $map_folder/appetitive_mask0.8+tlrc.HEAD  -toz	\
		-covariates $map_folder/fmri_covariates.csv"'[0..5,16..18]'"

# set permissions of map folder
chmod 775 -R $map_folder

# Execute?
if ( "$2" == "run" ) then
	cd $map_folder
	tcsh lin_1sampleT++_${map}_grams 
	tcsh lin_1sampleT++_${map}_kcal 
	tcsh quad_1sampleT++_${map}_kcal
	tcsh quad_1sampleT++_${map}_grams 
endif



# Copy base template into results folder 

if ( ! -f $basedset ) then
    echo "***** Failed to find $basedset :("
    exit 1
else
    if ( ! -f $map_folder/$basedset_name ) then
        cp ${basedset} $map_folder
    endif
endif

