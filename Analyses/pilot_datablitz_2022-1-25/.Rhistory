dm_fit$model_base_pchi[6] = pchisq((dm_fit[dm_fit$model == 'mb', 'n2loglikelihood'] - dm_fit[dm_fit$model == 'mb_respstick', 'n2loglikelihood']), 1)
dm_fit$model_base_pchi[7] = pchisq((dm_fit[dm_fit$model == 'mb', 'n2loglikelihood'] - dm_fit[dm_fit$model == 'mb_simstick_respstick', 'n2loglikelihood']), 2)
dm_fit$model_base_pchi[8] = pchisq((dm_fit[dm_fit$model == 'mb', 'n2loglikelihood'] - dm_fit[dm_fit$model == 'mb_stimstick', 'n2loglikelihood']), 1)
# model Free models
dm_fit$model_free_base_pchi = NA
dm_fit$model_free_base_pchi[10] = pchisq((dm_fit[dm_fit$model == 'mf', 'n2loglikelihood'] - dm_fit[dm_fit$model == 'mf_respstick', 'n2loglikelihood']), 1)
dm_fit$model_free_base_pchi[11] = pchisq((dm_fit[dm_fit$model == 'mf', 'n2loglikelihood'] - dm_fit[dm_fit$model == 'mf_stimstick', 'n2loglikelihood']), 1)
dm_fit$model_free_base_pchi[12] = pchisq((dm_fit[dm_fit$model == 'mf', 'n2loglikelihood'] -  dm_fit[dm_fit$model == 'mf_stimstick_respstick', 'n2loglikelihood']), 2)
best_mod_bic = dm_fit[dm_fit$bic == min(dm_fit$bic), ]$model
best_mod_aic = dm_fit[dm_fit$aic == min(dm_fit$aic), ]$model
best_mod_n2ll = dm_fit[dm_fit$n2loglikelihood == min(dm_fit$n2loglikelihood), ]$model
best_mod_mc_fadden_r = dm_fit[dm_fit$mc_fadden_r_mod == max(dm_fit$mc_fadden_r_mod), ]$model
## function for mode
mode <- function(x) {
uniqv <- unique(x)
uniqv[which.max(tabulate(match(x, uniqv)))]
}
n_mod_best <- mode(as.factor(c(best_mod_bic, best_mod_aic, best_mod_n2ll, best_mod_mc_fadden_r)))
n_mod_best
n_mod_best
length(n_mod_best)
source("~/OneDrive - The Pennsylvania State University/b-childfoodlab_Shared/Active_Studies/RO1_Brain_Mechanisms_IRB_5357/Participant_Data/Analyses/pilot_datablitz_2022-1-25/setup_space_dm.R", echo=TRUE)
## 1) Load Data ####
r01_dd <- as.data.frame(read_spss(("data_2022-01-25/delay_discounting.sav")))
names(r01_dd)[1] <- 'sub'
r01_dd_labels <- lapply(r01_dd, function(x) attributes(x)$label)
#remove 2 that were removed for ADHD
r01_dd <- r01_dd[r01_dd$sub != 31 & r01_dd$sub != 34, ]
# risk status
r01_dd$risk_status_mom <- droplevels(as_factor(r01_dd$risk_status_mom))
r01_space <- read.csv("data_2022-01-25/task-space_summary.tsv", header = TRUE, sep = "\t")
#merge
r01_space <- merge(r01_demo[c(1:16, 337:338, 19:24)], r01_space, by = 'sub', all.x = FALSE, all.y = TRUE)
names(r01_space_dm_best)
r01_space <- merge(r01_space, r01_space_dm_best, by = c('sub', 'ses'), all.x = FALSE, all.y = TRUE)
#merge
r01_space <- merge(r01_demo[c(1:16, 337:338, 19:24)], r01_space, by = 'sub', all.x = FALSE, all.y = TRUE)
r01_space <- read.csv("data_2022-01-25/task-space_summary.tsv", header = TRUE, sep = "\t")
#merge
r01_space <- merge(r01_demo[c(1:16, 337:338, 19:24)], r01_space, by = 'sub', all.x = FALSE, all.y = TRUE)
r01_space <- merge(r01_space, r01_space_dm_best, by = c('sub', 'ses'), all = TRUE)
names(r01_space)
View(r01_space)
#remove 2 that were removed for ADHD
r01_space = r01_space[r01_space$sub != 31 & r01_space$sub != 34, ]
names(r01_space)
## 2a) All Table ####
space_all_ses1 <- r01_space[r01_space$ses == 1, c(10, 12, 26, 29:30, 33:38, 93:98)]
space_all_ses2 <- r01_space[r01_space$ses == 2, c(10, 12, 26, 29:30, 33:38, 93:98)]
names(space_all_ses1)
#fix names
space_all_tab_ses1 <-
tbl_summary(
data=space_all_ses1,
value = list(age_yr ~ "Age, yr", sex ~ "Sex", all_earth_rt_mean ~ "Earth (Stage 1) Mean RT, ms", all_earth_p_miss ~ "Earth (Stage 1) Missed, %", all_planet_rt_mean ~ "Planet (Stage 2) Mean RT, ms", all_planet_p_miss ~ "Planet (Stage w) Missed, %", all_reward_rate ~ "Reward Rate", all_avg_reward ~ "Average Reward", all_reward_rate_corrected ~ "Corrected Reward Rate", all_prob_sameplanet_earthsame ~ "P (stay | same earth)", all_prob_sameplanet_earthdif ~ "P (stay | different earth", beta ~ "Inverse Temp", alpha ~ "Learning Rate", lambda ~ "Decay Rate", w ~ "Weighting Paramete", pi ~ "Choice 'Stickiness'", rho ~ "Response/Motor 'Stickiness'"),
label = list(age_yr ~ "Age, yr", sex ~ "Sex", all_earth_rt_mean ~ "Earth (Stage 1) Mean RT, ms", all_earth_p_miss ~ "Earth (Stage 1) Missed, %", all_planet_rt_mean ~ "Planet (Stage 2) Mean RT, ms", all_planet_p_miss ~ "Planet (Stage w) Missed, %", all_reward_rate ~ "Reward Rate", all_avg_reward ~ "Average Reward", all_reward_rate_corrected ~ "Corrected Reward Rate", all_prob_sameplanet_earthsame ~ "P (stay | same earth)", all_prob_sameplanet_earthdif ~ "P (stay | different earth", beta ~ "Inverse Temp", alpha ~ "Learning Rate", lambda ~ "Decay Rate", w ~ "Weighting Paramete", pi ~ "Choice 'Stickiness'", rho ~ "Response/Motor 'Stickiness'"),
statistic = all_continuous() ~ c("{mean} [{min} - {max}]"),
missing = "ifany",
digits = all_continuous() ~ 1)
## 2a) All Table ####
space_all_ses1 <- r01_space[r01_space$ses == 1, c(10, 12, 26, 29:30, 33:38, 93:98)]
space_all_ses2 <- r01_space[r01_space$ses == 2, c(10, 12, 26, 29:30, 33:38, 93:98)]
#fix names
space_all_tab_ses1 <-
tbl_summary(
data=space_all_ses1,
value = list(age_yr ~ "Age, yr", sex ~ "Sex", all_earth_rt_mean ~ "Earth (Stage 1) Mean RT, ms", all_earth_p_miss ~ "Earth (Stage 1) Missed, %", all_planet_rt_mean ~ "Planet (Stage 2) Mean RT, ms", all_planet_p_miss ~ "Planet (Stage w) Missed, %", all_reward_rate ~ "Reward Rate", all_avg_reward ~ "Average Reward", all_reward_rate_corrected ~ "Corrected Reward Rate", all_prob_sameplanet_earthsame ~ "P (stay | same earth)", all_prob_sameplanet_earthdif ~ "P (stay | different earth", beta ~ "Inverse Temp", alpha ~ "Learning Rate", lambda ~ "Decay Rate", w ~ "Weighting Paramete", pi ~ "Choice 'Stickiness'", rho ~ "Response/Motor 'Stickiness'"),
label = list(age_yr ~ "Age, yr", sex ~ "Sex", all_earth_rt_mean ~ "Earth (Stage 1) Mean RT, ms", all_earth_p_miss ~ "Earth (Stage 1) Missed, %", all_planet_rt_mean ~ "Planet (Stage 2) Mean RT, ms", all_planet_p_miss ~ "Planet (Stage w) Missed, %", all_reward_rate ~ "Reward Rate", all_avg_reward ~ "Average Reward", all_reward_rate_corrected ~ "Corrected Reward Rate", all_prob_sameplanet_earthsame ~ "P (stay | same earth)", all_prob_sameplanet_earthdif ~ "P (stay | different earth", beta ~ "Inverse Temp", alpha ~ "Learning Rate", lambda ~ "Decay Rate", w ~ "Weighting Paramete", pi ~ "Choice 'Stickiness'", rho ~ "Response/Motor 'Stickiness'"),
statistic = all_continuous() ~ c("{mean} [{min} - {max}]"),
missing = "ifany",
digits = all_continuous() ~ 1)
names(space_all_ses1)
names(r01_space)
## 2a) All Table ####
space_all_ses1 <- r01_space[r01_space$ses == 1, c(11, 13, 26, 29:30, 33:38, 93:98)]
space_all_ses2 <- r01_space[r01_space$ses == 2, c(11, 13, 26, 29:30, 33:38, 93:98)]
#fix names
space_all_tab_ses1 <-
tbl_summary(
data=space_all_ses1,
value = list(age_yr ~ "Age, yr", sex ~ "Sex", all_earth_rt_mean ~ "Earth (Stage 1) Mean RT, ms", all_earth_p_miss ~ "Earth (Stage 1) Missed, %", all_planet_rt_mean ~ "Planet (Stage 2) Mean RT, ms", all_planet_p_miss ~ "Planet (Stage w) Missed, %", all_reward_rate ~ "Reward Rate", all_avg_reward ~ "Average Reward", all_reward_rate_corrected ~ "Corrected Reward Rate", all_prob_sameplanet_earthsame ~ "P (stay | same earth)", all_prob_sameplanet_earthdif ~ "P (stay | different earth", beta ~ "Inverse Temp", alpha ~ "Learning Rate", lambda ~ "Decay Rate", w ~ "Weighting Paramete", pi ~ "Choice 'Stickiness'", rho ~ "Response/Motor 'Stickiness'"),
label = list(age_yr ~ "Age, yr", sex ~ "Sex", all_earth_rt_mean ~ "Earth (Stage 1) Mean RT, ms", all_earth_p_miss ~ "Earth (Stage 1) Missed, %", all_planet_rt_mean ~ "Planet (Stage 2) Mean RT, ms", all_planet_p_miss ~ "Planet (Stage w) Missed, %", all_reward_rate ~ "Reward Rate", all_avg_reward ~ "Average Reward", all_reward_rate_corrected ~ "Corrected Reward Rate", all_prob_sameplanet_earthsame ~ "P (stay | same earth)", all_prob_sameplanet_earthdif ~ "P (stay | different earth", beta ~ "Inverse Temp", alpha ~ "Learning Rate", lambda ~ "Decay Rate", w ~ "Weighting Paramete", pi ~ "Choice 'Stickiness'", rho ~ "Response/Motor 'Stickiness'"),
statistic = all_continuous() ~ c("{mean} [{min} - {max}]"),
missing = "ifany",
digits = all_continuous() ~ 1)
space_all_tab_ses1
space_all_tab_ses2 <-
tbl_summary(
data=space_all_ses2,
value = list(age_yr ~ "Age, yr", sex ~ "Sex", all_earth_rt_mean ~ "Earth (Stage 1) Mean RT, ms", all_earth_p_miss ~ "Earth (Stage 1) Missed, %", all_planet_rt_mean ~ "Planet (Stage 2) Mean RT, ms", all_planet_p_miss ~ "Planet (Stage w) Missed, %", all_reward_rate ~ "Reward Rate", all_avg_reward ~ "Average Reward", all_reward_rate_corrected ~ "Corrected Reward Rate", all_prob_sameplanet_earthsame ~ "P (stay | same earth)", all_prob_sameplanet_earthdif ~ "P (stay | different earth", beta ~ "Inverse Temp", alpha ~ "Learning Rate", lambda ~ "Decay Rate", w ~ "Weighting Parameter", pi ~ "Choice 'Stickiness'", rho ~ "Response/Motor 'Stickiness'"),
label = list(age_yr ~ "Age, yr", sex ~ "Sex", all_earth_rt_mean ~ "Earth (Stage 1) Mean RT, ms", all_earth_p_miss ~ "Earth (Stage 1) Missed, %", all_planet_rt_mean ~ "Planet (Stage 2) Mean RT, ms", all_planet_p_miss ~ "Planet (Stage w) Missed, %", all_reward_rate ~ "Reward Rate", all_avg_reward ~ "Average Reward", all_reward_rate_corrected ~ "Corrected Reward Rate", all_prob_sameplanet_earthsame ~ "P (stay | same earth)", all_prob_sameplanet_earthdif ~ "P (stay | different earth", beta ~ "Inverse Temp", alpha ~ "Learning Rate", lambda ~ "Decay Rate", w ~ "Weighting Parameter", pi ~ "Choice 'Stickiness'", rho ~ "Response/Motor 'Stickiness'"),
statistic = all_continuous() ~ c("{mean} [{min} - {max}]"),
missing = "ifany",
digits = all_continuous() ~ 1)
space_all_tab_ses2
## 2b) Mom Risk Status Table ####
space_risk_mom_ses1 <- r01_space[r01_space$ses == 1 & r01_space$risk_status_mom != 'Neither', c(8, 11, 13, 26, 29:30, 33:38, 93:98)]
space_risk_mom_ses1$risk_status_mom <- droplevels(space_risk_mom_ses1$risk_status_mom)
space_risk_mom_ses2 <- r01_space[r01_space$ses == 2 & r01_space$risk_status_mom != 'Neither', c(8, 11, 13, 26, 29:30, 33:38, 93:98)]
names(r01_space)
## 2b) Mom Risk Status Table ####
space_risk_mom_ses1 <- r01_space[r01_space$ses == 1 & r01_space$risk_status_mom != 'Neither', c(9, 11, 13, 26, 29:30, 33:38, 93:98)]
space_risk_mom_ses1$risk_status_mom <- droplevels(space_risk_mom_ses1$risk_status_mom)
space_risk_mom_ses2 <- r01_space[r01_space$ses == 2 & r01_space$risk_status_mom != 'Neither', c(9, 11, 13, 26, 29:30, 33:38, 93:98)]
space_risk_mom_ses2$risk_status_mom <- droplevels(space_risk_mom_ses2$risk_status_mom)
space_risk_mom_tab_ses1 <-
tbl_summary(
data=space_risk_mom_ses1,
by = risk_status_mom,
value = list(age_yr ~ "Age, yr", sex ~ "Sex", all_earth_rt_mean ~ "Earth (Stage 1) Mean RT, ms", all_earth_p_miss ~ "Earth (Stage 1) Missed, %", all_planet_rt_mean ~ "Planet (Stage 2) Mean RT, ms", all_planet_p_miss ~ "Planet (Stage w) Missed, %", all_reward_rate ~ "Reward Rate", all_avg_reward ~ "Average Reward", all_reward_rate_corrected ~ "Corrected Reward Rate", all_prob_sameplanet_earthsame ~ "P (stay | same earth)", all_prob_sameplanet_earthdif ~ "P (stay | different earth", beta ~ "Inverse Temp", alpha ~ "Learning Rate", lambda ~ "Decay Rate", w ~ "Weighting Parameter", pi ~ "Choice 'Stickiness'", rho ~ "Response/Motor 'Stickiness'"),
label = list(age_yr ~ "Age, yr", sex ~ "Sex", all_earth_rt_mean ~ "Earth (Stage 1) Mean RT, ms", all_earth_p_miss ~ "Earth (Stage 1) Missed, %", all_planet_rt_mean ~ "Planet (Stage 2) Mean RT, ms", all_planet_p_miss ~ "Planet (Stage w) Missed, %", all_reward_rate ~ "Reward Rate", all_avg_reward ~ "Average Reward", all_reward_rate_corrected ~ "Corrected Reward Rate", all_prob_sameplanet_earthsame ~ "P (stay | same earth)", all_prob_sameplanet_earthdif ~ "P (stay | different earth", beta ~ "Inverse Temp", alpha ~ "Learning Rate", lambda ~ "Decay Rate", w ~ "Weighting Parameter", pi ~ "Choice 'Stickiness'", rho ~ "Response/Motor 'Stickiness'"),
missing = "ifany",
digits = risk_mom_continuous() ~ 1)
names(space_risk_mom_ses1)
space_risk_mom_tab_ses1 <-
tbl_summary(
data=space_risk_mom_ses1,
by = risk_status_mom,
value = list(age_yr ~ "Age, yr", sex ~ "Sex", all_earth_rt_mean ~ "Earth (Stage 1) Mean RT, ms", all_earth_p_miss ~ "Earth (Stage 1) Missed, %", all_planet_rt_mean ~ "Planet (Stage 2) Mean RT, ms", all_planet_p_miss ~ "Planet (Stage w) Missed, %", all_reward_rate ~ "Reward Rate", all_avg_reward ~ "Average Reward", all_reward_rate_corrected ~ "Corrected Reward Rate", all_prob_sameplanet_earthsame ~ "P (stay | same earth)", all_prob_sameplanet_earthdif ~ "P (stay | different earth", beta ~ "Inverse Temp", alpha ~ "Learning Rate", lambda ~ "Decay Rate", w ~ "Weighting Parameter", pi ~ "Choice 'Stickiness'", rho ~ "Response/Motor 'Stickiness'"),
label = list(age_yr ~ "Age, yr", sex ~ "Sex", all_earth_rt_mean ~ "Earth (Stage 1) Mean RT, ms", all_earth_p_miss ~ "Earth (Stage 1) Missed, %", all_planet_rt_mean ~ "Planet (Stage 2) Mean RT, ms", all_planet_p_miss ~ "Planet (Stage w) Missed, %", all_reward_rate ~ "Reward Rate", all_avg_reward ~ "Average Reward", all_reward_rate_corrected ~ "Corrected Reward Rate", all_prob_sameplanet_earthsame ~ "P (stay | same earth)", all_prob_sameplanet_earthdif ~ "P (stay | different earth", beta ~ "Inverse Temp", alpha ~ "Learning Rate", lambda ~ "Decay Rate", w ~ "Weighting Parameter", pi ~ "Choice 'Stickiness'", rho ~ "Response/Motor 'Stickiness'"),
statistic = all_continuous() ~ c("{mean} [{min} - {max}]"),
missing = "ifany",
digits = risk_mom_continuous() ~ 1)
space_risk_mom_tab_ses1 <-
tbl_summary(
data=space_risk_mom_ses1,
by = risk_status_mom,
value = list(age_yr ~ "Age, yr", sex ~ "Sex", all_earth_rt_mean ~ "Earth (Stage 1) Mean RT, ms", all_earth_p_miss ~ "Earth (Stage 1) Missed, %", all_planet_rt_mean ~ "Planet (Stage 2) Mean RT, ms", all_planet_p_miss ~ "Planet (Stage w) Missed, %", all_reward_rate ~ "Reward Rate", all_avg_reward ~ "Average Reward", all_reward_rate_corrected ~ "Corrected Reward Rate", all_prob_sameplanet_earthsame ~ "P (stay | same earth)", all_prob_sameplanet_earthdif ~ "P (stay | different earth", beta ~ "Inverse Temp", alpha ~ "Learning Rate", lambda ~ "Decay Rate", w ~ "Weighting Parameter", pi ~ "Choice 'Stickiness'", rho ~ "Response/Motor 'Stickiness'"),
label = list(age_yr ~ "Age, yr", sex ~ "Sex", all_earth_rt_mean ~ "Earth (Stage 1) Mean RT, ms", all_earth_p_miss ~ "Earth (Stage 1) Missed, %", all_planet_rt_mean ~ "Planet (Stage 2) Mean RT, ms", all_planet_p_miss ~ "Planet (Stage w) Missed, %", all_reward_rate ~ "Reward Rate", all_avg_reward ~ "Average Reward", all_reward_rate_corrected ~ "Corrected Reward Rate", all_prob_sameplanet_earthsame ~ "P (stay | same earth)", all_prob_sameplanet_earthdif ~ "P (stay | different earth", beta ~ "Inverse Temp", alpha ~ "Learning Rate", lambda ~ "Decay Rate", w ~ "Weighting Parameter", pi ~ "Choice 'Stickiness'", rho ~ "Response/Motor 'Stickiness'"),
statistic = all_continuous() ~ c("{mean} [{min} - {max}]"),
missing = "ifany",
digits = all_continuous() ~ 1)
space_risk_mom_ses1 <- r01_space[r01_space$ses == 1 & r01_space$risk_status_mom != 'Neither', c(9, 11, 13, 26, 29:30, 33:38, 93:98)]
space_risk_mom_ses1$risk_status_mom <- droplevels(space_risk_mom_ses1$risk_status_mom)
space_risk_mom_ses2 <- r01_space[r01_space$ses == 2 & r01_space$risk_status_mom != 'Neither', c(9, 11, 13, 26, 29:30, 33:38, 93:98)]
space_risk_mom_ses2$risk_status_mom <- droplevels(space_risk_mom_ses2$risk_status_mom)
space_risk_mom_tab_ses1
space_risk_mom_tab_ses2 <-
tbl_summary(
data=space_risk_mom_ses2,
by = risk_status_mom,
value = list(age_yr ~ "Age, yr", sex ~ "Sex", all_earth_rt_mean ~ "Earth (Stage 1) Mean RT, ms", all_earth_p_miss ~ "Earth (Stage 1) Missed, %", all_planet_rt_mean ~ "Planet (Stage 2) Mean RT, ms", all_planet_p_miss ~ "Planet (Stage w) Missed, %", all_reward_rate ~ "Reward Rate", all_avg_reward ~ "Average Reward", all_reward_rate_corrected ~ "Corrected Reward Rate", all_prob_sameplanet_earthsame ~ "P (stay | same earth)", all_prob_sameplanet_earthdif ~ "P (stay | different earth", beta ~ "Inverse Temp", alpha ~ "Learning Rate", lambda ~ "Decay Rate", w ~ "Weighting Parameter", pi ~ "Choice 'Stickiness'", rho ~ "Response/Motor 'Stickiness'"),
label = list(age_yr ~ "Age, yr", sex ~ "Sex", all_earth_rt_mean ~ "Earth (Stage 1) Mean RT, ms", all_earth_p_miss ~ "Earth (Stage 1) Missed, %", all_planet_rt_mean ~ "Planet (Stage 2) Mean RT, ms", all_planet_p_miss ~ "Planet (Stage w) Missed, %", all_reward_rate ~ "Reward Rate", all_avg_reward ~ "Average Reward", all_reward_rate_corrected ~ "Corrected Reward Rate", all_prob_sameplanet_earthsame ~ "P (stay | same earth)", all_prob_sameplanet_earthdif ~ "P (stay | different earth", beta ~ "Inverse Temp", alpha ~ "Learning Rate", lambda ~ "Decay Rate", w ~ "Weighting Parameter", pi ~ "Choice 'Stickiness'", rho ~ "Response/Motor 'Stickiness'"),
statistic = all_continuous() ~ c("{mean} [{min} - {max}]"),
missing = "ifany",
digits = all_continuous() ~ 1)
space_risk_mom_tab_ses2
## 2c) Strict Risk Table ####
space_risk_both_ses1 <- r01_space[r01_space$ses == 1 & r01_space$risk_status_both != 'Neither', c(10, 11, 13, 26, 29:30, 33:38, 93:98)]
space_risk_both_ses1$risk_status_both <- droplevels(space_risk_both_ses1$risk_status_both)
space_risk_both_ses2 <- r01_space[r01_space$ses == 2 & r01_space$risk_status_both != 'Neither', c(10, 11, 13, 26, 29:30, 33:38, 93:98)]
space_risk_both_ses2$risk_status_both <- droplevels(space_risk_both_ses2$risk_status_both)
space_risk_both_tab_ses1 <-
tbl_summary(
data=space_risk_both_ses1,
by = risk_status_both,
value = list(age_yr ~ "Age, yr", sex ~ "Sex", all_earth_rt_mean ~ "Earth (Stage 1) Mean RT, ms", all_earth_p_miss ~ "Earth (Stage 1) Missed, %", all_planet_rt_mean ~ "Planet (Stage 2) Mean RT, ms", all_planet_p_miss ~ "Planet (Stage w) Missed, %", all_reward_rate ~ "Reward Rate", all_avg_reward ~ "Average Reward", all_reward_rate_corrected ~ "Corrected Reward Rate", all_prob_sameplanet_earthsame ~ "P (stay | same earth)", all_prob_sameplanet_earthdif ~ "P (stay | different earth", beta ~ "Inverse Temp", alpha ~ "Learning Rate", lambda ~ "Decay Rate", w ~ "Weighting Parameter", pi ~ "Choice 'Stickiness'", rho ~ "Response/Motor 'Stickiness'"),
label = list(age_yr ~ "Age, yr", sex ~ "Sex", all_earth_rt_mean ~ "Earth (Stage 1) Mean RT, ms", all_earth_p_miss ~ "Earth (Stage 1) Missed, %", all_planet_rt_mean ~ "Planet (Stage 2) Mean RT, ms", all_planet_p_miss ~ "Planet (Stage w) Missed, %", all_reward_rate ~ "Reward Rate", all_avg_reward ~ "Average Reward", all_reward_rate_corrected ~ "Corrected Reward Rate", all_prob_sameplanet_earthsame ~ "P (stay | same earth)", all_prob_sameplanet_earthdif ~ "P (stay | different earth", beta ~ "Inverse Temp", alpha ~ "Learning Rate", lambda ~ "Decay Rate", w ~ "Weighting Parameter", pi ~ "Choice 'Stickiness'", rho ~ "Response/Motor 'Stickiness'"),
statistic = all_continuous() ~ c("{mean} [{min} - {max}]"),
missing = "ifany",
digits = all_continuous() ~ 1)
space_risk_both_tab_ses2 <-
tbl_summary(
data=space_risk_both_ses2,
by = risk_status_both,
value = list(age_yr ~ "Age, yr", sex ~ "Sex", all_earth_rt_mean ~ "Earth (Stage 1) Mean RT, ms", all_earth_p_miss ~ "Earth (Stage 1) Missed, %", all_planet_rt_mean ~ "Planet (Stage 2) Mean RT, ms", all_planet_p_miss ~ "Planet (Stage w) Missed, %", all_reward_rate ~ "Reward Rate", all_avg_reward ~ "Average Reward", all_reward_rate_corrected ~ "Corrected Reward Rate", all_prob_sameplanet_earthsame ~ "P (stay | same earth)", all_prob_sameplanet_earthdif ~ "P (stay | different earth", beta ~ "Inverse Temp", alpha ~ "Learning Rate", lambda ~ "Decay Rate", w ~ "Weighting Parameter", pi ~ "Choice 'Stickiness'", rho ~ "Response/Motor 'Stickiness'"),
label = list(age_yr ~ "Age, yr", sex ~ "Sex", all_earth_rt_mean ~ "Earth (Stage 1) Mean RT, ms", all_earth_p_miss ~ "Earth (Stage 1) Missed, %", all_planet_rt_mean ~ "Planet (Stage 2) Mean RT, ms", all_planet_p_miss ~ "Planet (Stage w) Missed, %", all_reward_rate ~ "Reward Rate", all_avg_reward ~ "Average Reward", all_reward_rate_corrected ~ "Corrected Reward Rate", all_prob_sameplanet_earthsame ~ "P (stay | same earth)", all_prob_sameplanet_earthdif ~ "P (stay | different earth", beta ~ "Inverse Temp", alpha ~ "Learning Rate", lambda ~ "Decay Rate", w ~ "Weighting Parameter", pi ~ "Choice 'Stickiness'", rho ~ "Response/Motor 'Stickiness'"),
statistic = all_continuous() ~ c("{mean} [{min} - {max}]"),
missing = "ifany",
digits = all_continuous() ~ 1)
space_risk_both_tab_ses1
space_risk_both_tab_ses2
space1_balacc_model_mom <- lm(w ~ sex + age_yr + risk_status_mom*ses, data = r01_space)
space_wxses_model_mom <- lm(w ~ sex + age_yr + risk_status_mom*ses, data = r01_space)
summary(space_wxses_model_mom)
space_wxses_model_mom <- lmer(w ~ sex + age_yr + risk_status_mom*ses + (1|sub), data = r01_space)
summary(space_wxses_model_mom)
space_w_model_mom <- lm(w ~ sex + age_yr + risk_status_mom, data = r01_space)
summary(space_w_model_mom)
names(r01_space)
space_beta_model_mom <- lm(w ~ sex + age_yr + risk_status_mom, data = r01_space)
space_lambda_model_mom <- lm(w ~ sex + age_yr + risk_status_mom, data = r01_space)
space_pi_model_mom <- lm(w ~ sex + age_yr + risk_status_mom, data = r01_space)
space_rho_model_mom <- lm(w ~ sex + age_yr + risk_status_mom, data = r01_space)
summary(space_beta_model_mom)
space1_beta_model_mom <- lm(w ~ sex + age_yr + risk_status_mom, data = r01_space[r01_space$ses == 1, ])
space1_alpha_model_mom <- lm(w ~ sex + age_yr + risk_status_mom, data = r01_space[r01_space$ses == 1, ])
space1_lambda_model_mom <- lm(w ~ sex + age_yr + risk_status_mom, data = r01_space[r01_space$ses == 1, ])
space1_w_model_mom <- lm(w ~ sex + age_yr + risk_status_mom, data = r01_space[r01_space$ses == 1, ])
space1_pi_model_mom <- lm(w ~ sex + age_yr + risk_status_mom, data = r01_space[r01_space$ses == 1, ])
space1_rho_model_mom <- lm(w ~ sex + age_yr + risk_status_mom, data = r01_space[r01_space$ses == 1, ])
space2_beta_model_mom <- lm(w ~ sex + age_yr + risk_status_mom, data = r01_space[r01_space$ses == 2, ])
space2_alpha_model_mom <- lm(w ~ sex + age_yr + risk_status_mom, data = r01_space[r01_space$ses == 2, ])
space2_lambda_model_mom <- lm(w ~ sex + age_yr + risk_status_mom, data = r01_space[r01_space$ses == 2, ])
space2_w_model_mom <- lm(w ~ sex + age_yr + risk_status_mom, data = r01_space[r01_space$ses == 2, ])
space2_pi_model_mom <- lm(w ~ sex + age_yr + risk_status_mom, data = r01_space[r01_space$ses == 2, ])
space2_rho_model_mom <- lm(w ~ sex + age_yr + risk_status_mom, data = r01_space[r01_space$ses == 2, ])
summary(space1_beta_model_mom)
summary(space2_beta_model_mom)
summary(space1_alpha_model_mom_model_mom)
summary(space1_alpha_model_mom)
summary(space2_alpha_model_mom)
summary(space1_lambda_model_mom)
summary(space2_lambda_model_mom)
summary(space1_w_model_mom)
summary(space2_w_model_mom)
summary(space1_rho_model_mom)
summary(space1_pi_model_mom)
space1_beta_model_mom <- lm(beta ~ sex + age_yr + risk_status_mom, data = r01_space[r01_space$ses == 1, ])
space1_alpha_model_mom <- lm(alpha ~ sex + age_yr + risk_status_mom, data = r01_space[r01_space$ses == 1, ])
space1_lambda_model_mom <- lm(lambda ~ sex + age_yr + risk_status_mom, data = r01_space[r01_space$ses == 1, ])
space1_w_model_mom <- lm(w ~ sex + age_yr + risk_status_mom, data = r01_space[r01_space$ses == 1, ])
space1_pi_model_mom <- lm(pi ~ sex + age_yr + risk_status_mom, data = r01_space[r01_space$ses == 1, ])
space1_rho_model_mom <- lm(rho ~ sex + age_yr + risk_status_mom, data = r01_space[r01_space$ses == 1, ])
space2_beta_model_mom <- lm(beta ~ sex + age_yr + risk_status_mom, data = r01_space[r01_space$ses == 2, ])
space2_alpha_model_mom <- lm(alpha ~ sex + age_yr + risk_status_mom, data = r01_space[r01_space$ses == 2, ])
space2_lambda_model_mom <- lm(lambda ~ sex + age_yr + risk_status_mom, data = r01_space[r01_space$ses == 2, ])
space2_w_model_mom <- lm(w ~ sex + age_yr + risk_status_mom, data = r01_space[r01_space$ses == 2, ])
space2_pi_model_mom <- lm(pi ~ sex + age_yr + risk_status_mom, data = r01_space[r01_space$ses == 2, ])
space2_rho_model_mom <- lm(rho ~ sex + age_yr + risk_status_mom, data = r01_space[r01_space$ses == 2, ])
summary(space1_beta_model_mom)
summary(space2_beta_model_mom)
summary(space1_alpha_model_mom)
summary(space2_alpha_model_mom)
summary(space1_lambda_model_mom)
summary(space2_lambda_model_mom)
summary(space1_pi_model_mom)
summary(space2_pi_model_mom)
summary(space1_rho_model_mom)
summary(space2_rho_model_mom)
summary(space1_rho_model_mom)
#dont have enough repeats yet for this to be valid
space_wxses_model_mom <- lmer(w ~ sex + age_yr + risk_status_mom*ses + (1|sub), data = r01_space)
space_wxses_model_mom
summary(space_wxses_model_mom)
#dont have enough repeats yet for this to be valid
ses1_ids <- r01_space[r01_space$ses == 1, 'sub']
ses2_ids <- r01_space[r01_space$ses == 2, 'sub']
both_ses_ids <- ses1_ids %in% ses2_ids
both_ses_ids
both_ses21_ids <- ses2_ids %in% ses1_ids
both_ses12_ids <- ses1_ids %in% ses2_ids
both_ses12_ids
both_ses21_ids
both_ses21_ids <- ses2_ids %in% ses1_ids[isTRUE(both_ses12_ids)]
both_ses21_ids
ses1_ids
ses2_ids
ses1_ids[ses1_ids %in% ses2_ids]
both_ses_ids <- ses1_ids[ses1_ids %in% ses2_ids]
both_ses2_ids <- ses2_ids[ses2_ids %in% ses1_ids]
both_ses2_ids
both_ses_ids <- ses1_ids[ses1_ids %in% ses2_ids]
r01_space_bothses <- r01_space[r01_space$sub %in% both_ses_ids, ]
r01_space_bothses$sub
r01_space_bothses <- r01_space[r01_space$sub %in% both_ses_ids, ]
space_wxses_model_mom <- lmer(w ~ sex + age_yr + risk_status_mom*ses + (1|sub), data = r01_space_bothses)
summary(space_wxses_model_mom)
length(both_ses_ids)
r01_space1 <- r01_space[r01_space$ses == 1, ]
r01_space1$w_pred_mom <- predict(space1_w_model_mom, type = 'response')
r01_space1$rho_pred_mom <- predict(space1_rho_model_mom, type = 'response')
space1_w_mom_sum <- summary(space1_w_model_mom)
space1_rho_mom_sum <- summary(space1_rho_model_mom)
ggplot(r01_space1, aes(x=risk_status_mom, y=w_pred_mom)) +
geom_violin(trim=FALSE, fill = 'cornflowerblue')+
labs(title="Baseline Space Task: Weighting Parameter", x = " Risk Status (Mom BMI)", y = "Weighting Parameter - Adjusted for Sex and Age") +
geom_boxplot(width = 0.1) +
theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"),
panel.background = element_blank(), axis.text.x = element_text(angle = 90), axis.ticks = element_blank())
ggplot(r01_space1, aes(x=risk_status_mom, y=rho_pred_mom)) +
geom_violin(trim=FALSE, fill = 'cornflowerblue')+
labs(title="Baseline Space Task: Response/Motor Stickiness", x = " Risk Status (Mom BMI)", y = "Response/Motor Stickiness - Adjusted for Sex and Age") +
geom_boxplot(width = 0.1) +
theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"),
panel.background = element_blank(), axis.text.x = element_text(angle = 90), axis.ticks = element_blank())
sst_all
xtabs(~ risk_status_mom, data = sst_all)
xtabs(~risk_status_mom, data = r01_sst_cond[r01_sst_cond$all_racehorse_check == 1, ])
summary(sst_ssd_EDmodel)
sst_ssd_EDmodel_mom
summary(sst_ssd_EDmodel_mom)
summary(sst_ssd_PSmodel)
names(r01_sst_PSlong)
names(r01_sst_cond)
names(r01_sst_EDlong)
names(r01_sst_long)
View(r01_sst_long[c('block', 'condition')])
names(r01_sst_cond)
r01_sst_long[r01_sst_long$sub == 1]
r01_sst_long[r01_sst_long$sub == 1, ]
r01_sst_long[r01_sst_long$sub == 1, 'block']
paste0(r01_sst_long[r01_sst_long$sub == 1, 'block'], sep = '_')
as.character(r01_sst_long[r01_sst_long$sub == 1, 'block'], sep = '_')
sub_order <- paste0(data[data[['sub']] == sub, 'condition'], sep = '_')
r01_sst_long[r01_sst_long$sub == 1, 'condition']
r01_sst_cond <- r01_sst_long[r01_sst_long$sub == 1, 'condition']
sub_order <- r01_sst_long[r01_sst_long$sub == 1, 'condition']
sub_order
'hED' %in% sub_order
grepl('hED', sub_order, fixed = TRUE)
PS_order <- grepl('lPort', sub_order, fixed = TRUE)
ED_order <- ifelse(isTRUE(ED_order), 1, 0)
ED_order <- grepl('lPort', sub_order, fixed = TRUE)
ED_order <- grepl('hED', sub_order, fixed = TRUE)
ED_order <- ifelse(isTRUE(ED_order), 1, 0)
ED_order
ED_order <- grepl('hED', sub_order, fixed = TRUE)
ED_order
as.numeric(grepl('hED', sub_order, fixed = TRUE))
paste(as.numeric(grepl('hED', sub_order, fixed = TRUE)), sep = '_')
ED_order <- paste(as.numeric(grepl('hED', sub_order, fixed = TRUE)), collapse = '')
ED_order
ED_order <- \as.numeric(grepl('hED', sub_order, fixed = TRUE))
ED_order <- as.numeric(grepl('hED', sub_order, fixed = TRUE))
ED_order
ifelse(ED_order == 1, 'hED', 'lED')
ED_order <- paste(ifelse(ED_order == 1, 'hED', 'lED'), collapse = '_')
ED_order
order_fn <- function(data, sub){
sub_order <- data[data[['sub']] == sub, 'condition']
ED_order <- as.numeric(grepl('hED', sub_order, fixed = TRUE))
ED_order <- paste(ifelse(ED_order == 1, 'hED', 'lED'), collapse = '_')
PS_order <- as.numeric(grepl('lPort', sub_order, fixed = TRUE))
PS_order <- paste(ifelse(ED_order == 1, 'lPS', 'sPS'), collapse = '_')
return(ED_order, PS_order)
}
order_fn <- function(data, sub, cond){
sub_order <- data[data[['sub']] == sub, 'condition']
if (cond == 'ED'){
ED_order <- as.numeric(grepl('hED', sub_order, fixed = TRUE))
ED_order <- paste(ifelse(ED_order == 1, 'hED', 'lED'), collapse = '_')
}
if (cond == 'PS') {
PS_order <- as.numeric(grepl('lPort', sub_order, fixed = TRUE))
PS_order <- paste(ifelse(ED_order == 1, 'lPS', 'sPS'), collapse = '_')
}
}
r01_sst_long <- read.csv("data_2022-01-25/task-sst_summary_blockslong.tsv", header = TRUE, sep = "\t")
r01_sst_cond <- read.csv("data_2022-01-25/task-sst_summary_condwide.tsv", header = TRUE, sep = "\t")
#merge
r01_sst_long <- merge(r01_demo[c(1:16, 337:338, 19:24)], r01_sst_long, by = 'sub', all.x = FALSE, all.y = TRUE)
r01_sst_cond <- merge(r01_demo[c(1:16, 337:338, 19:24)], r01_sst_cond, by = 'sub', all.x = FALSE, all.y = TRUE)
#remove 2 that were removed for ADHD
r01_sst_long <- r01_sst_long[r01_sst_long$sub != 31 & r01_sst_long$sub != 34, ]
r01_sst_cond <- r01_sst_cond[r01_sst_cond$sub != 31 & r01_sst_cond$sub != 34, ]
#make long by condition - ED
r01_sst_cond$ED_racehorse_check <- ifelse(r01_sst_cond$h_ed_racehorse_check == 1 & r01_sst_cond$l_ed_racehorse_check == 1, 1, 0)
r01_sst_EDlong <- melt(r01_sst_cond[!is.na(r01_sst_cond$ED_racehorse_check) & r01_sst_cond$ED_racehorse_check == 1, c(1:24, 39, 53)], id.vars = names(r01_sst_cond)[1:24])
r01_sst_EDlong$ED <- ifelse(r01_sst_EDlong$variable == 'h_ed_racehorse_check', 'High ED', 'Low ED')
r01_sst_EDlong$ED <- factor(r01_sst_EDlong$ED, levels = c('Low ED', 'High ED'))
r01_sst_EDlong$racehorse_check <- r01_sst_EDlong$value
goRT_EDlong <- melt(r01_sst_cond[!is.na(r01_sst_cond$ED_racehorse_check) & r01_sst_cond$ED_racehorse_check == 1, c(42, 56)])
names(goRT_EDlong)[2] <- 'go_rt'
nError_EDlong <- melt(r01_sst_cond[!is.na(r01_sst_cond$ED_racehorse_check) & r01_sst_cond$ED_racehorse_check == 1, c(45, 59)])
names(nError_EDlong)[2] <- 'n_error'
nMiss_EDlong <- melt(r01_sst_cond[!is.na(r01_sst_cond$ED_racehorse_check) & r01_sst_cond$ED_racehorse_check == 1, c(47, 61)])
names(nMiss_EDlong)[2] <- 'n_miss'
pResp_EDlong <- melt(r01_sst_cond[!is.na(r01_sst_cond$ED_racehorse_check) & r01_sst_cond$ED_racehorse_check == 1, c(48, 62)])
names(pResp_EDlong)[2] <- 'prop_resp'
ssd_EDlong <- melt(r01_sst_cond[!is.na(r01_sst_cond$ED_racehorse_check) & r01_sst_cond$ED_racehorse_check == 1, c(50, 64)])
names(ssd_EDlong)[2] <- 'ssd'
ssrtMean_EDlong <- melt(r01_sst_cond[!is.na(r01_sst_cond$ED_racehorse_check) & r01_sst_cond$ED_racehorse_check == 1, c(51, 65)])
names(ssrtMean_EDlong)[2] <- 'ssrt_mean'
ssrtInt_EDlong <- melt(r01_sst_cond[!is.na(r01_sst_cond$ED_racehorse_check) & r01_sst_cond$ED_racehorse_check == 1, c(52, 66)])
names(ssrtInt_EDlong)[2] <- 'ssrt_int'
r01_sst_EDlong <- cbind.data.frame(r01_sst_EDlong[c(1:24, 27:28)], goRT_EDlong[2], nError_EDlong[2], nMiss_EDlong[2], pResp_EDlong[2], ssd_EDlong[2], ssrtMean_EDlong[2], ssrtInt_EDlong[2])
#make long by condition - PS
r01_sst_cond$PS_racehorse_check <- ifelse(r01_sst_cond$l_port_racehorse_check == 1 & r01_sst_cond$s_port_racehorse_check == 1, 1, 0)
r01_sst_PSlong <- melt(r01_sst_cond[!is.na(r01_sst_cond$PS_racehorse_check) & r01_sst_cond$PS_racehorse_check == 1, c(1:24, 67, 81)], id.vars = names(r01_sst_cond)[1:24])
r01_sst_PSlong$PS <- ifelse(r01_sst_PSlong$variable == 'l_port_racehorse_check', 'Large PS', 'Small PS')
r01_sst_PSlong$PS <- factor(r01_sst_PSlong$PS, levels = c('Small PS', 'Large PS'))
r01_sst_PSlong$racehorse_check <- r01_sst_PSlong$value
goRT_PSlong <- melt(r01_sst_cond[!is.na(r01_sst_cond$PS_racehorse_check) & r01_sst_cond$PS_racehorse_check == 1, c(70, 84)])
names(goRT_PSlong)[2] <- 'go_rt'
nError_PSlong <- melt(r01_sst_cond[!is.na(r01_sst_cond$PS_racehorse_check) & r01_sst_cond$PS_racehorse_check == 1, c(73, 87)])
names(nError_PSlong)[2] <- 'n_error'
nMiss_PSlong <- melt(r01_sst_cond[!is.na(r01_sst_cond$PS_racehorse_check) & r01_sst_cond$PS_racehorse_check == 1, c(75, 89)])
names(nMiss_PSlong)[2] <- 'n_miss'
pResp_PSlong <- melt(r01_sst_cond[!is.na(r01_sst_cond$PS_racehorse_check) & r01_sst_cond$PS_racehorse_check == 1, c(76, 90)])
names(pResp_PSlong)[2] <- 'prop_resp'
ssd_PSlong <- melt(r01_sst_cond[!is.na(r01_sst_cond$PS_racehorse_check) & r01_sst_cond$PS_racehorse_check == 1, c(78, 92)])
names(ssd_PSlong)[2] <- 'ssd'
ssrtMean_PSlong <- melt(r01_sst_cond[!is.na(r01_sst_cond$PS_racehorse_check) & r01_sst_cond$PS_racehorse_check == 1, c(79, 93)])
names(ssrtMean_PSlong)[2] <- 'ssrt_mean'
ssrtInt_PSlong <- melt(r01_sst_cond[!is.na(r01_sst_cond$PS_racehorse_check) & r01_sst_cond$PS_racehorse_check == 1, c(80, 94)])
names(ssrtInt_PSlong)[2] <- 'ssrt_int'
r01_sst_PSlong <- cbind.data.frame(r01_sst_PSlong[c(1:24, 27:28)], goRT_PSlong[2], nError_PSlong[2], nMiss_PSlong[2], pResp_PSlong[2], ssd_PSlong[2], ssrtMean_PSlong[2], ssrtInt_PSlong[2])
#check all conditions for racehorse
racehorse_check_fn <- function(data, id){
id_data <- data[data$sub == id,]
ncond <- sum(id_data$racehorse_check == 1)
return(ncond)
}
r01_sst_long$ncond_racehorse_good <- sapply(r01_sst_long$sub, FUN = racehorse_check_fn, data = r01_sst_long)
sapply(r01_sst_EDlong[['sub']], FUN = order_fn, data = r01_sst_long, cond = 'ED')
r01_sst_EDlong[['sub']]
order_fn <- function(data, sub, cond){
sub_order <- data[data[['sub']] == sub, 'condition']
if (cond == 'ED'){
ED_order <- as.numeric(grepl('hED', sub_order, fixed = TRUE))
ED_order <- paste(ifelse(ED_order == 1, 'hED', 'lED'), collapse = '_')
}
if (cond == 'PS') {
PS_order <- as.numeric(grepl('lPort', sub_order, fixed = TRUE))
PS_order <- paste(ifelse(ED_order == 1, 'lPS', 'sPS'), collapse = '_')
}
}
r01_sst_EDlong[['sub']]
data = r01_sst_long
sub = 1
sub_order <- data[data[['sub']] == sub, 'condition']
sub_order
ED_order <- as.numeric(grepl('hED', sub_order, fixed = TRUE))
ED_order <- paste(ifelse(ED_order == 1, 'hED', 'lED'), collapse = '_')
cond == 'ED'
ED_order
sapply(r01_sst_EDlong[['sub']], FUN = order_fn, data = r01_sst_long, cond = 'ED')
sapply(c(r01_sst_EDlong[['sub']]), FUN = order_fn, data = r01_sst_long, cond = 'ED')
sapply(r01_sst_EDlong['sub'], FUN = order_fn, data = r01_sst_long, cond = 'ED')
sapply(as.list(r01_sst_EDlong[['sub']]), FUN = order_fn, data = r01_sst_long, cond = 'ED')
debugSource("~/OneDrive - The Pennsylvania State University/b-childfoodlab_Shared/Active_Studies/RO1_Brain_Mechanisms_IRB_5357/Participant_Data/Analyses/pilot_datablitz_2022-1-25/setup_sst.R", echo=TRUE)
n
sapply(r01_sst_EDlong[['sub']], FUN = order_fn, data = r01_sst_long, cond = 'ED')
sub_order
ED_order
ED_order
order_fn <- function(data, sub, cond){
sub_order <- data[data[['sub']] == sub, 'condition']
if (cond == 'ED'){
ED_order <- as.numeric(grepl('hED', sub_order, fixed = TRUE))
ED_order <- paste(ifelse(ED_order == 1, 'hED', 'lED'), collapse = '_')
return(ED_order)
}
if (cond == 'PS') {
PS_order <- as.numeric(grepl('lPort', sub_order, fixed = TRUE))
PS_order <- paste(ifelse(ED_order == 1, 'lPS', 'sPS'), collapse = '_')
return(PS_order)
}
}
sapply(r01_sst_EDlong[['sub']], FUN = order_fn, data = r01_sst_long, cond = 'ED')
r01_sst_EDlong$order <- as.factor(r01_sst_EDlong$order)
r01_sst_EDlong$order <- sapply(r01_sst_EDlong[['sub']], FUN = order_fn, data = r01_sst_long, cond = 'ED')
r01_sst_EDlong$order <- as.factor(r01_sst_EDlong$order)
xtabs(~order, data = r01_sst_EDlong)
source("~/OneDrive - The Pennsylvania State University/b-childfoodlab_Shared/Active_Studies/RO1_Brain_Mechanisms_IRB_5357/Participant_Data/Analyses/pilot_datablitz_2022-1-25/setup_sst.R", echo=TRUE)
r01_sst_EDlong$order <- sapply(r01_sst_EDlong[['sub']], FUN = order_fn, data = r01_sst_long, cond = 'ED')
r01_sst_EDlong$order <- as.factor(r01_sst_EDlong$order)
r01_sst_PSlong$order <- sapply(r01_sst_EDlong[['sub']], FUN = order_fn, data = r01_sst_long, cond = 'PS')
r01_sst_PSlong$order <- sapply(r01_sst_PSlong[['sub']], FUN = order_fn, data = r01_sst_long, cond = 'PS')
r01_sst_PSlong$order <- as.factor(r01_sst_PSlong$order)
source("~/OneDrive - The Pennsylvania State University/b-childfoodlab_Shared/Active_Studies/RO1_Brain_Mechanisms_IRB_5357/Participant_Data/Analyses/pilot_datablitz_2022-1-25/setup_sst.R", echo=TRUE)
sst_ssd_EDmodel <- lmer(ssd ~ sex + age_yr + order + ED + (1|sub), data = r01_sst_EDlong)
summary(sst_ssd_EDmodel)
sst_ssd_EDmodel_mom <- lmer(ssd ~ sex + age_yr + order + ED*risk_status_mom + (1|sub), data = r01_sst_EDlong)
summary(sst_ssd_EDmodel_mom)
sst_ssd_EDmodel_sesmom <- lmer(ssd ~ mom_ed + income + sex + age_yr + order + ED*risk_status_mom + (1|sub), data = r01_sst_EDlong)
summary(sst_ssd_EDmodel_sesmom)
summary(sst_ssd_PSmodel)
sst_ssd_PSmodel <- lmer(ssd ~ sex + age_yr + order + PS + (1|sub), data = r01_sst_PSlong)
r01_sst_PSlong$order
order_fn <- function(data, sub, cond){
sub_order <- data[data[['sub']] == sub, 'condition']
if (cond == 'ED'){
ED_order <- as.numeric(grepl('hED', sub_order, fixed = TRUE))
ED_order <- paste(ifelse(ED_order == 1, 'hED', 'lED'), collapse = '_')
return(ED_order)
}
if (cond == 'PS') {
PS_order <- as.numeric(grepl('lPort', sub_order, fixed = TRUE))
PS_order <- paste(ifelse(PS_order == 1, 'lPS', 'sPS'), collapse = '_')
return(PS_order)
}
}
r01_sst_PSlong$order <- sapply(r01_sst_PSlong[['sub']], FUN = order_fn, data = r01_sst_long, cond = 'PS')
r01_sst_PSlong$order <- as.factor(r01_sst_PSlong$order)
sst_ssd_PSmodel <- lmer(ssd ~ sex + age_yr + order + PS + (1|sub), data = r01_sst_PSlong)
summary(sst_ssd_PSmodel)
r01_sst_long$ED <- ifelse(r01_sst_long$condition == 'hED_sPort' | r01_sst_long$condition == 'hED_lPort', 'High ED', 'Low ED')
r01_sst_long$ED <- factor(r01_sst_long$ED, levels = c('Low ED', 'High ED'))
r01_sst_long$PS <- ifelse(r01_sst_long$condition == 'hED_sPort' | r01_sst_long$condition == 'lED_sPort', 'Small PS', 'Large PS')
r01_sst_long$PS <- factor(r01_sst_long$PS, levels = c('Small PS', 'Large PS'))
r01_sst_long$block <- factor(r01_sst_long$block)
r01_sst_long$block
sst_ssd_EDxPSmodel <- lmer(ssd ~ sex + age_yr + block + ED*PS + (1|sub), data = r01_sst_long[r01_sst_long$ncond_racehorse_good == 4, ])
summary(sst_ssd_EDxPSmodel)
summary(lmer(all_ssrt_int ~ sex + age_yr + block + ED*PS + (1|sub), data = r01_sst_long[r01_sst_long$ncond_racehorse_good == 4, ]))
summary(lmer(ssrt_int ~ sex + age_yr + block + ED*PS + (1|sub), data = r01_sst_long[r01_sst_long$ncond_racehorse_good == 4, ]))
summary(lmer(ssrt_mean ~ sex + age_yr + block + ED*PS + (1|sub), data = r01_sst_long[r01_sst_long$ncond_racehorse_good == 4, ]))
summary(lmer(ssrt_int ~ sex + age_yr + ED + (1|sub), data = r01_sst_EDlong))
summary(lmer(ssrt_int ~ sex + age_yr + order + ED + (1|sub), data = r01_sst_EDlong))
summary(lmer(ssrt_mean ~ sex + age_yr + order + ED + (1|sub), data = r01_sst_EDlong))
summary(lmer(ssrt_mean ~ sex + age_yr + order + PS + (1|sub), data = r01_sst_PSlong))
summary(lmer(ssrt_mean ~ sex + age_yr + PS + (1|sub), data = r01_sst_PSlong))
summary(lmer(ssrt_int ~ sex + age_yr + PS + (1|sub), data = r01_sst_PSlong))
summary(lmer(ssrt_int ~ sex + age_yr + order + PS + (1|sub), data = r01_sst_PSlong))
length(unique(r01_sst_EDlong$sub))
length(unique(r01_sst_PSlong$sub))
names(r01_dd)
dd_fa_model_mom <- lm(dd_ed50 ~ sex + age_yr + risk_status_mom, data = r01_dd)
dd_ed50_model_mom <- lm(dd_ed50 ~ sex + age_yr + risk_status_mom, data = r01_dd)
summary(dd_ed50_model_mom)
names(r01_dd)
dd_ed50_model_mom <- lm(dd_mb_auc ~ sex + age_yr + risk_status_mom, data = r01_dd)
summary(dd_ed50_model_mom)
dd_auc10_model_mom <- lm(dd_mb_auc_log10 ~ sex + age_yr + risk_status_mom, data = r01_dd)
summary(v)
summary(dd_auc10_model_mom)
View(qs_reward_merge_tab)
qs_reward_merge_tab
